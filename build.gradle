/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/tutorial_groovy_projects.html
 */

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    /*maven {
        url = "https://i-t.io/m2"
    }*/
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'

    // Use the latest Groovy version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.5.2'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    //compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    //compile group: 'org.apache.logging.log4j', name: 'log4j', version: '2.11.1'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.infinite', name: 'bobbin', version: '1.0.0'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
        /*maven {
            url = "https://i-t.io/m2/"
        }*/
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.2.4"
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.5'
    }
}

uploadArchives {
    repositories {
        mavenLocal()
        mavenDeployer {
            repository(url: mavenLocal().url)
            pom.version = '2.0.0'
            pom.groupId = 'io.infinite'
            pom.artifactId = 'blackbox'
        }
    }
}

apply plugin: 'com.github.jacobono.jaxb'

dependencies {
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7'
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5"
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:0.6.4"
    jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.4"
}

configurations {
    jaxb
}

task jaxb(){
    description 'Converts xsds to classes'
    def jaxbTargetDir = file("generated")
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(name: 'xjc', classname: 'org.jvnet.jaxb2_commons.xjc.XJC2Task', classpath: configurations.jaxb.asPath)
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(destdir: '${jaxbTargetDir}', package: 'io.infinite.blackbox.generated', schema:'src/main/resources/xsd/2_x_x/BlackBox.xsd', binding:'src/main/resources/xjb/2_x_x/BlackBox.xjb', extension:'true'){
            arg(value: "-Xannotate")
        }
    }
}

sourceSets {

    main {
        groovy {
            srcDirs = ['src/main/groovy', 'generated']
        }
    }

    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions.forkOptions) {
        memoryMaximumSize = '1g'
        jvmArgs = ['-XX:MaxPermSize=512m', '-Xms512m', '-Xmx1g']
    }
}